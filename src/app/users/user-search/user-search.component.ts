import { Component, OnInit, ViewChild } from '@angular/core';
import { FormGroup, FormBuilder, FormControl } from '@angular/forms';

/**
 * Display a user search form with a resulting user list
 */
@Component({
  selector: 'app-user-search',
  templateUrl: './user-search.component.html',
  styleUrls: ['./user-search.component.scss']
})
export class UserSearchComponent implements OnInit {
  // reference to set focus on this field
  @ViewChild('search', { static: true })
  search: any;

  /**
   * params generated by the search form to send to app-user-list
   */
  public params: any | null = null;

  /**
   * list of attributes that can be searched
   * ::TODO:: make this a configuration, adding optional fields as needed
   */
  public attributes: any[] = [
    {
      value: 'username',
      label: 'Username'
    }, {
      value: 'email',
      label: 'Email'
    },
    {
      value: 'name',
      label: 'Name'
    }
  ];

  /**
   * Types of searchs available
   */
  public types: any[] = [
    {
      value: '=',
      label: 'Equals'
    }, {
      value: '^=',
      label: 'Starts with'
    }
  ];

  /**
   * search form
   */
  public form: FormGroup = new FormBuilder().group({
    searchFormControl: new FormControl(''),
    attributeFormControl: new FormControl('email'),
    typeFormControl: new FormControl('^=')
  });

  /**
   * Handle submiting
   */
  public submit() {
    this.params = {};
    const searchData = this.form.getRawValue();
    if (searchData.searchFormControl) {
      const filter = searchData.attributeFormControl +
        ' ' +
        searchData.typeFormControl +
        ' ' +
        '\"' +
        searchData.searchFormControl +
        '\"';

      this.params = {
        Filter: filter
      };
    }
  }

  /**
   * Handles when the component is first created
   */
  ngOnInit() {
    this.search.nativeElement.focus();
  }

}
