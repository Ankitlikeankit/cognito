import { Component, OnInit, ViewChild } from '@angular/core';
import { FormGroup, FormBuilder, FormControl } from '@angular/forms';

/**
 * Display a user search form with a resulting user list
 */
@Component({
  selector: 'app-user-search',
  templateUrl: './user-search.component.html',
  styleUrls: ['./user-search.component.scss']
})
export class UserSearchComponent implements OnInit {
  // reference to set focus on this field
  @ViewChild('search', { static: true })
  search: any;

  /**
   * params generated by the search form to send to app-user-list
   */
  public params: any | null = null;

  /**
   * list of attributes that can be searched
   * ::TODO:: make this a configuration, adding optional fields as needed
   */
  public attributes: any[] = [
    {
      value: 'username',
      label: 'Username (Unique Id)'
    }, {
      value: 'email',
      label: 'Email'
    },
    {
      value: 'name',
      label: 'Name'
    },
    {
      value: 'sub',
      label: 'Sub (Unique Id)'
    },
    {
      value: 'phone_number',
      label: 'Phone Number'
    },
    {
      value: 'given_name',
      label: 'Given Name'
    },
    {
      value: 'family_name',
      label: 'Family Name'
    },
    {
      value: 'preferred_username',
      label: 'Preferred Name'
    },
    {
      value: 'cognito:user_status',
      label: 'Status',
      options: [
        'CONFIRMED'
      ]
    },
    {
      value: 'status',
      label: 'Enabled',
      options: [
        'Enabled',
        'Disabled'
      ]
    }
  ];

  /**
   * Types of searchs available
   */
  public types: any[] = [
    {
      value: '=',
      label: 'Equals'
    }, {
      value: '^=',
      label: 'Starts with'
    }
  ];

  /**
   * Default search parameters
   */
  private formDefaults: any = {
    search: '',
    attribute: 'email',
    type: '^='
  }

  /**
   * Search form
   */
  public form: FormGroup = new FormBuilder().group({
    searchFormControl: new FormControl(this.formDefaults.search),
    attributeFormControl: new FormControl(this.formDefaults.attribute),
    typeFormControl: new FormControl(this.formDefaults.type)
  });

  /**
   * Handle submiting
   */
  public submit() {
    let parameters = {};
    const searchData = this.form.getRawValue();
    const filter = searchData.attributeFormControl +
      ' ' +
      searchData.typeFormControl +
      ' ' +
      '\"' +
      searchData.searchFormControl +
      '\"';
    parameters = {
      Filter: filter
    };
    // pass parameters to the template
    this.params = parameters;
  }

  /**
   * Clear
   */
  public clear() {
    this.form.reset(
      {
        searchFormControl: this.formDefaults.search,
        attributeFormControl: this.formDefaults.attribute,
        typeFormControl: this.formDefaults.type
      }
    );
    this.submit();
  }

  /**
   * Handles when the component is first created
   */
  ngOnInit() {
    // focus on search input
    this.search.nativeElement.focus();
    // perform default search
    this.submit();
  }

}
